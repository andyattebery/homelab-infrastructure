---
- name: Configure backup-01
  hosts: backup-01
  become: true

  roles:
    # - pbs_config
    # - pbs_acme_certificate
    # - geerlingguy.ntp
    # - configure_server
    # # - role: power_saving
    # #   vars:
    # #     power_saving_pcie_runtime_all_devices_enabled: true
    # #     power_saving_sata_all_devices: true
    - role: zfs_conf
      vars:
        zfs_arc_max_gb: 24
    # - role: beszel_agent
    - role: samba
      vars:
        samba_timemachine:
          path: "{{ backup_01_timemachine_path }}"
          username: "{{ backup_01_timemachine_username }}"
          password: "{{ backup_01_timemachine_password }}"
          max_size: 4T
    # - artis3n.tailscale.machine
    # - role: backup_destination
    #   vars:
    #     syncoid_destination_username: "syncoid"
    #     syncoid_source_ssh_public_keys:
    #       - "{{ nas_01_syncoid_ssh_public_key }}"
    #     syncoid_destination_dataset: backups
    # - role: nut
    #   vars:
    #     nut_enable_client: true
    #     nut_client_servers:
    #       - ups_name: "{{ ups_monitor_rack_nut_ups_name }}"
    #         server_address: "{{ ups_monitor_rack_nut_server_address }}"
    #         username: "{{ ups_monitor_rack_nut_vm_host_01_username }}"
    #         password: "{{ ups_monitor_rack_nut_vm_host_01_password }}"
    # - role: pikvm_remote_command
    #   vars:
    #     pikvm_remote_command_ssh_public_key: "{{ pikvm_kvmd_ssh_public_key }}"
    # - healthchecks_service
    # - role: sanoid
    #   vars:
    #     sanoid_dataset_configs:
    #       backups/pbs:
    #         autosnap: true
    #         autoprune: true
    #         recursive: true
    #         frequently: 0
    #         hourly: 0
    #         daily: 30
    #         monthly: 1
    #         yearly: 0
    # - role: syncoid_source
    #   vars:
    #     syncoid_source_username: "{{ ansible_user }}"
    #     syncoid_source_ssh_private_key: "{{ backup_01_syncoid_ssh_private_key }}"
    #     syncoid_destination_username: "{{ offsite_nas_syncoid_username }}"
    #     syncoid_destination_host: "offsite-nas.{{ tailscale_tailnet }}"
    #     syncoid_pre_sync_commands:
    #       - "/usr/bin/echo 'Powering on via PiKVM' ; /usr/bin/curl --no-progress-meter --header 'X-KVMD-User:{{ offsite_pikvm_web_username }}' --header 'X-KVMD-Passwd:{{ offsite_pikvm_web_password }}' --request POST 'https://offsite-pikvm.{{ tailscale_tailnet }}/api/atx/power?action=on'"
    #       - "/usr/bin/echo 'Sleeping for 5m...' ; /usr/bin/sleep 5m"
    #     syncoid_post_sync_commands:
    #       - "-/usr/bin/ssh -o StrictHostKeyChecking=accept-new -i /home/{{ syncoid_source_username }}/.ssh/id_ed25519 {{ offsite_nas_syncoid_username }}@offsite-nas.{{ tailscale_tailnet }} 'sudo shutdown now' ; echo 'Shutdown complete'"
    #     syncoid_timer_on_calendar: "*-*-* 04:00:00"
    #     syncoid_datasets:
    #       - syncoid_source_dataset: backups/pbs
    #         syncoid_destination_dataset: backups/pbs
    #         syncoid_destination_dataset_mountpoint: /mnt/backups/pbs
    #         syncoid_healthchecks_uuid: 832862e4-2c1e-4332-a3c4-ecf6ddeba1d3

  tasks:
    - name: Configure network interfaces
      ansible.builtin.copy:
        src: files/backup-01/interfaces
        dest: /etc/network/interfaces
        mode: "0644"
        owner: root
        group: root
    # - name: Wake on LAN
      # echo 'enabled' > '/sys/class/net/enp4s0/device/power/wakeup'
      # echo 'enabled' > 'sys/class/net/enp5s0/device/power/wakeup'
