---
include:
  - ./docker-compose-traefik.yaml

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: ${PUID}:${PGID}
    restart: unless-stopped
    network_mode: host
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/jellyfin/config:/config
      - ${DOCKER_DATA_DIRECTORY}/jellyfin/cache:/cache
      - smb_storage:/media
    # Optional - alternative address used for autodiscovery
    environment:
      - JELLYFIN_PublishedServerUrl=https://jellyfin.${DOMAIN_NAME}
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.$DOMAIN_NAME`)
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.routers.jellyfin.tls.certresolver=cloudflare
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    restart: unless-stopped
    runtime: nvidia
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=latest
      - NVIDIA_VISIBLE_DEVICES=all
      # - PLEX_CLAIM=${PLEX_CLAIM_TOKEN}
    network_mode: host
    # devices:
    #   - /dev/dri:/dev/dri
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/plex/config:/config
      - ${DOCKER_DATA_DIRECTORY}/plex/transcode:/transcode
      - smb_storage:/data
    labels:
      - dsm.url=https://app.plex.tv
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      # - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
      - 8268:8268 # Example extra node port
    networks:
      - traefik
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - nodeName=${HOSTNAME}
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/tdarr/server:/app/server
      - ${DOCKER_DATA_DIRECTORY}/tdarr/configs:/app/configs
      - ${DOCKER_DATA_DIRECTORY}/tdarr/logs:/app/logs
      - smb_storage:/mnt/storage
      - ${DOCKER_DATA_DIRECTORY}/tdarr/transcode_cache:/transcode_cache
    labels:
      - traefik.enable=true
      - traefik.http.routers.tdarr.rule=Host(`tdarr.$DOMAIN_NAME`)
      - traefik.http.routers.tdarr.entrypoints=websecure
      - traefik.http.routers.tdarr.tls.certresolver=cloudflare
      - traefik.http.services.tdarr.loadbalancer.server.port=8265

volumes:
  smb_storage:
    driver: local
    driver_opts:
      type: cifs
      o: noserverino,addr=nas-01.${DOMAIN_NAME},username=${SMB_STORAGE_USERNAME},password=${SMB_STORAGE_PASSWORD},uid=${SMB_STORAGE_UID},gid=${SMB_STORAGE_GID}
      device: "//nas-01.${DOMAIN_NAME}/storage"
