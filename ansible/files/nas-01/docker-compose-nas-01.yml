---
include:
  - ./docker-compose-traefik.yaml

services:
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - USER_UID=${PUID}
      - USER_GID=${PGID}
    restart: unless-stopped
    ports:
      - "222:22"
    volumes:
      - /mnt/tank/data/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.gitea.rule=Host(`gitea.$DOMAIN_NAME`)
      - traefik.http.routers.gitea.entrypoints=websecure
      - traefik.http.routers.gitea.tls.certresolver=cloudflare
      - traefik.http.routers.gitea.service=gitea
      - traefik.http.services.gitea.loadbalancer.server.port=3000
      # - traefik.http.routers.gitea-ssh.rule=Host(`gitea-ssh.$DOMAIN_NAME`)
      # - traefik.http.routers.gitea-ssh.entrypoints=websecure
      # - traefik.http.routers.gitea-ssh.tls.certresolver=cloudflare
      # - traefik.http.routers.gitea-ssh.service=gitea-ssh
      # - traefik.http.services.gitea-ssh.loadbalancer.server.port=22
      - dsm.traefik.router=gitea
  iperf:
    container_name: iperf
    image: mlabbe/iperf3
    restart: unless-stopped
    ports:
      - 5201:5201/tcp
      - 5201:5201/udp
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    command:
      ['server', '/data', '--address', '0.0.0.0:9000', '--console-address', '0.0.0.0:9001']
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=${MINIO_USERNAME}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    volumes:
      - /mnt/tank/minio:/data
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.minio.rule=Host(`s3.$DOMAIN_NAME`)
      - traefik.http.routers.minio.entrypoints=websecure
      - traefik.http.routers.minio.tls.certresolver=cloudflare
      - traefik.http.routers.minio.service=minio
      - traefik.http.services.minio.loadbalancer.server.port=9000
      - traefik.http.routers.minio-console.rule=Host(`minio.$DOMAIN_NAME`)
      - traefik.http.routers.minio-console.entrypoints=websecure
      - traefik.http.routers.minio-console.tls.certresolver=cloudflare
      - traefik.http.routers.minio-console.service=minio-console
      - traefik.http.services.minio-console.loadbalancer.server.port=9001
      - dsm.traefik.router=minio-console
  nextcloud:
    image: nextcloud:27
    container_name: nextcloud
    restart: unless-stopped
    links:
      - nextcloud_mariadb
    volumes:
      - ${NEXTCLOUD_DATA_DIRECTORY}:/var/www/html
    environment:
      - TRUSTED_PROXIES=${NEXTCLOUD_TRUSTED_PROXIES}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${NEXTCLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${NEXTCLOUD_MYSQL_USER}
      - MYSQL_HOST=nextcloud_mariadb
      - REDIS_HOST=nextcloud-redis
    networks:
      - traefik
      - nextcloud
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`nextcloud.$DOMAIN_NAME`)
      - traefik.http.routers.nextcloud.entrypoints=websecure
      - traefik.http.routers.nextcloud.tls.certresolver=cloudflare
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
      - traefik.http.middlewares.nextcloud_sts.headers.stsincludesubdomains=true
      - traefik.http.middlewares.nextcloud_sts.headers.stspreload=true
      - traefik.http.middlewares.nextcloud_sts.headers.stsseconds=31536000
      - traefik.http.middlewares.nextcloud_well_known.redirectregex.permanent=true
      - "traefik.http.middlewares.nextcloud_well_known.redirectregex.regex=https://(.*)/.well-known/(?:card|cal)dav"
      - "traefik.http.middlewares.nextcloud_well_known.redirectregex.replacement=https://$${1}/remote.php/dav"
      - traefik.http.routers.nextcloud.middlewares=nextcloud_well_known,nextcloud_sts
  nextcloud_mariadb:
    image: mariadb:10
    container_name: nextcloud_mariadb
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - /mnt/tank/nextcloud/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${NEXTCLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${NEXTCLOUD_MYSQL_USER}
    networks:
      - nextcloud
  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    volumes:
      - /mnt/tank/nextcloud/redis:/data
    networks:
      - nextcloud
  resilio_sync:
    image: lscr.io/linuxserver/resilio-sync:latest
    container_name: resilio-sync
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/resilio-sync/config:/config
      - /mnt/storage:/storage
      - /mnt/depot-cache/resilio-sync:/downloads
      - /mnt/storage:/sync
    ports:
      - 53255:55555
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.resilio-sync.rule=Host(`resilio-sync.$DOMAIN_NAME`)
      - traefik.http.routers.resilio-sync.entrypoints=websecure
      - traefik.http.routers.resilio-sync.tls.certresolver=cloudflare
      - traefik.http.services.reslio-sync.loadbalancer.server.port=8888
  scrutiny:
    image: ghcr.io/analogj/scrutiny:master-omnibus
    container_name: scrutiny
    restart: unless-stopped
    privileged: true
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/scrutiny/log:/scrutiny/log
      - ${DOCKER_DATA_DIRECTORY}/scrutiny/config/scrutiny.db:/scrutiny/config/scrutiny.db
      - ${DOCKER_DATA_DIRECTORY}/scrutiny/data/influxdb:/opt/scrutiny/influxdb
      - ${APPLICATION_SETTINGS_DIR}/scrutiny/config/scrutiny.yaml:/scrutiny/config/scrutiny.yaml
      - ${APPLICATION_SETTINGS_DIR}/scrutiny/config/scrutiny.yaml:/opt/scrutiny/config/scrutiny.yaml
      - ${APPLICATION_SETTINGS_DIR}/scrutiny/config/scrutiny.yaml:/opt/scrutiny/config/collector.yaml
      - /run/udev:/run/udev:ro
    devices:
      - /dev:/dev
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.scrutiny.rule=Host(`scrutiny.$DOMAIN_NAME`)
      - traefik.http.routers.scrutiny.entrypoints=websecure
      - traefik.http.routers.scrutiny.tls.certresolver=cloudflare
      - traefik.http.routers.scrutiny.service=scrutiny
      - traefik.http.services.scrutiny.loadbalancer.server.port=8080
      - traefik.http.routers.scrutiny-influxdb.rule=Host(`scrutiny-influxdb.$DOMAIN_NAME`)
      - traefik.http.routers.scrutiny-influxdb.entrypoints=websecure
      - traefik.http.routers.scrutiny-influxdb.tls.certresolver=cloudflare
      - traefik.http.routers.scrutiny-influxdb.service=scrutiny-influxdb
      - traefik.http.services.scrutiny-influxdb.loadbalancer.server.port=8086
      - dsm.traefik.router=scrutiny
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: ${HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/syncthing/config:/config
      # - /mnt/tank/data/syncthing:/data
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.syncthing.rule=Host(`syncthing.$DOMAIN_NAME`)
      - traefik.http.routers.syncthing.entrypoints=websecure
      - traefik.http.routers.syncthing.tls.certresolver=cloudflare
      - traefik.http.services.syncthing.loadbalancer.server.port=8384

networks:
  nextcloud:
    name: nextcloud
