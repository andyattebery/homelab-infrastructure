---
services:
  freshrss:
    image: freshrss/freshrss:latest
    container_name: freshrss
    # hostname: freshrss
    restart: unless-stopped
    networks:
      - traefik
    logging:
      options:
        max-size: 10m
    environment:
      CRON_MIN: ${FRESHRSS_UPDATE_FEEDS_CRON_MIN}
      FRESHRSS_INSTALL: |-
        --api_enabled
        --base_url https://${FRESHRSS_DOMAIN_NAME}
        --default_user ${FRESHRSS_USERNAME}
        --language ${LANG_TWO_LETTER}
      FRESHRSS_USER: |-
        --api_password ${FRESHRSS_API_PASSWORD}
        --email ${FRESHRSS_EMAIL}
        --language ${LANG_TWO_LETTER}
        --password ${FRESHRSS_PASSWORD}
        --user ${FRESHRSS_USERNAME}
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/freshrss/data:/var/www/FreshRSS/data
      - ${DOCKER_DATA_DIRECTORY}/freshrss/extensions:/var/www/FreshRSS/extensions
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.freshrss-mw1.compress=true
      - traefik.http.middlewares.freshrss-mw2.headers.browserXssFilter=true
      - traefik.http.middlewares.freshrss-mw2.headers.forceSTSHeader=true
      - traefik.http.middlewares.freshrss-mw2.headers.frameDeny=true
      - traefik.http.middlewares.freshrss-mw2.headers.referrerPolicy=no-referrer-when-downgrade
      - traefik.http.middlewares.freshrss-mw2.headers.stsSeconds=31536000
      - traefik.http.routers.freshrss.entryPoints=websecure
      - traefik.http.routers.freshrss.middlewares=freshrss-mw1,freshrss-mw2
      - traefik.http.routers.freshrss.rule=Host(`${FRESHRSS_DOMAIN_NAME}`)
      - traefik.http.routers.freshrss.tls.certResolver=cloudflare
      - traefik.http.services.freshrss.loadbalancer.server.port=80
  miniflux:
    image: miniflux/miniflux:latest
    container_name: miniflux
    networks:
      - traefik
      - miniflux
    depends_on:
      miniflux-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${MINIFLUX_DB_USERNAME}:${MINIFLUX_DB_PASSWORD}@miniflux-db/${MINIFLUX_DB_NAME}?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${MINIFLUX_ADMIN_PASSWORD}
      - BASE_URL=${MINIFLUX_DOMAIN_NAME}
    healthcheck:
      test: ["CMD", "/usr/bin/miniflux", "-healthcheck", "auto"]
    labels:
      - traefik.enable=true
      - traefik.http.routers.miniflux.entryPoints=websecure
      - traefik.http.routers.miniflux.rule=Host(`${MINIFLUX_DOMAIN_NAME}`)
      - traefik.http.routers.miniflux.tls.certResolver=cloudflare
      - traefik.http.services.miniflux.loadbalancer.server.port=8080
  miniflux-db:
    image: postgres:15
    container_name: miniflux-db
    networks:
      - miniflux
    environment:
      - POSTGRES_USER=${MINIFLUX_DB_USERNAME}
      - POSTGRES_PASSWORD=${MINIFLUX_DB_PASSWORD}
      - POSTGRES_DB=${MINIFLUX_DB_NAME}
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/miniflux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s

networks:
  miniflux:
    name: miniflux
  traefik:
    name: traefik
    external: true