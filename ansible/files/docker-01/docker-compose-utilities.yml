---
services:
  # browser-chrome:
  #   image: selenium/standalone-chrome:4
  #   container_name: browser-chrome
  #   hostname: browser-chrome
  #   environment:
  #     - VNC_NO_PASSWORD=1
  #     - SCREEN_WIDTH=1920
  #     - SCREEN_HEIGHT=1080
  #     - SCREEN_DEPTH=24
  #   volumes:
  #     # Workaround to avoid the browser crashing inside a docker container
  #     # See https://github.com/SeleniumHQ/docker-selenium#quick-start
  #     - /dev/shm:/dev/shm
  #   restart: unless-stopped
  changedetectionio:
    image: dgtlmoon/changedetection.io
    container_name: changedetectionio
    restart: unless-stopped
    environment:
      - PLAYWRIGHT_DRIVER_URL=ws://playwright-chrome:3000
      # - WEBDRIVER_URL=http://browser-chrome:4444/wd/hub
    networks:
      - traefik
    depends_on:
      playwright-chrome:
          condition: service_started
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/changedetectionio:/datastore
    labels:
      - traefik.enable=true
      - traefik.http.routers.changedetectionio.rule=Host(`changedetection.$DOMAIN_NAME`)
      - traefik.http.routers.changedetectionio.entrypoints=websecure
      - traefik.http.routers.changedetectionio.tls.certresolver=cloudflare
      - "traefik.http.services.changedetectionio.loadbalancer.server.port=5000"
      - dsm.name=ChangeDetection.io
  dashboard-services-manager:
    image: ghcr.io/andyattebery/dashboard-services-manager:api-latest
    container_name: dashboard-services-manager
    restart: unless-stopped
    environment:
      - HOSTNAME=${HOSTNAME}
    networks:
      - traefik
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/dashy:/dashy_config
      - ${DOCKER_DATA_DIRECTORY}/dashboard-services-manager:/config
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard-services-manager.rule=Host(`dashboard-services-manager.$DOMAIN_NAME`)
      - traefik.http.routers.dashboard-services-manager.entrypoints=websecure
      - traefik.http.routers.dashboard-services-manager.tls.certresolver=cloudflare
      - traefik.http.services.dashboard-services-manager.loadbalancer.server.port=59999
      - dsm.ignore=true
  dashboard_services_manager_provider:
    image: ghcr.io/andyattebery/dashboard-services-manager:provider-latest
    container_name: dashboard-services-manager-provider
    restart: unless-stopped
    environment:
      - DSM_PROVIDEROPTIONS__HOSTNAME=${HOSTNAME}
      - DSM_PROVIDEROPTIONS__APIURL=https://dashboard-services-manager.omegaho.me
      - DSM_PROVIDEROPTIONS__DOCKERLABELPREFIX=dsm
      - DSM_PROVIDEROPTIONS__ARESERVICEHOSTSHTTPS=true
      - DSM_PROVIDEROPTIONS__SERVICESPROVIDERTYPES__0=yaml
      - DSM_PROVIDEROPTIONS__SERVICESPROVIDERTYPES__1=docker
      - DSM_PROVIDEROPTIONS__SERVICESYAMLFILEPATH=/config/services.yaml
    networks:
      - traefik
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/dashboard-services-manager:/config
      - "/var/run/docker.sock:/var/run/docker.sock"
  dashy:
    image: lissy93/dashy:latest
    container_name: dashy
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - UID=${PUID}
      - GID=${PGID}
    networks:
      - traefik
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/dashy:/app/user-data
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - traefik.enable=true
      - "traefik.http.routers.dashy.rule=Host(`home.$DOMAIN_NAME`)"
      - traefik.http.routers.dashy.entrypoints=websecure
      - traefik.http.routers.dashy.tls.certresolver=cloudflare
      - traefik.http.services.dashy.loadbalancer.server.port=8080
      - dsm.ignore=true
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    networks:
      - traefik
    volumes:
      - ${DOCKER_DATA_DIRECTORY}/homepage/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`homepage.$DOMAIN_NAME`)
      - traefik.http.routers.homepage.entrypoints=websecure
      - traefik.http.routers.homepage.tls.certresolver=cloudflare
      - traefik.http.services.homepage.loadbalancer.server.port=3000
      - dsm.ignore=true
  playwright-chrome:
    image: dgtlmoon/sockpuppetbrowser:latest
    container_name: playwright-chrome
    hostname: playwright-chrome
    cap_add:
      - SYS_ADMIN
# SYS_ADMIN might be too much, but it can be needed on your platform https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-on-gitlabci
    restart: unless-stopped
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - MAX_CONCURRENT_CHROME_PROCESSES=10

networks:
  traefik:
    external: true
