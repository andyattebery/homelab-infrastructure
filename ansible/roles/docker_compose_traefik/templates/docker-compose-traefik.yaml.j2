---
services:
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: always
    command:
      - --api.dashboard={{ docker_compose_traefik_enable_dashboard }}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --metrics.prometheus=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --log=true
      - --log.level=ERROR
      - --log.filePath=/logs/traefik.log
      # - --accessLog=true
      # - --accessLog.filePath=/logs/access.log
      # - --accessLog.bufferingSize=100
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.email=${CERTBOT_EMAIL}
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
    networks:
      traefik:
    {% if docker_compose_traefik_enable_host_network %}

    extra_hosts:
      - host.docker.internal:host-gateway
    {% endif %}

    ports:
      - "80:80"
      - "443:443"
    environment:
      - "CF_DNS_API_TOKEN=${CLOUDFLARE_API_TOKEN}"
    volumes:
      - "${DOCKER_DATA_DIRECTORY}/traefik/letsencrypt:/letsencrypt"
      - "${DOCKER_DATA_DIRECTORY}/traefik/logs:/logs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    {% if docker_compose_traefik_enable_dashboard %}

    labels:
      - traefik.enable=true
      - "traefik.http.routers.dashboard-https.rule=Host(`traefik.$HOSTNAME.$DOMAIN_NAME`)"
      - traefik.http.routers.dashboard-https.entrypoints=websecure
      - traefik.http.routers.dashboard-https.tls.certresolver=cloudflare
      - traefik.http.routers.dashboard-https.service=api@internal
    {% endif %}

networks:
  traefik:
    name: traefik
