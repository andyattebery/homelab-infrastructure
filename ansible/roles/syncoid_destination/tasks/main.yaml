---
- name: Install packages
  ansible.builtin.apt:
    name:
      - sanoid
      - lzop
      - mbuffer
      - acl
      - lz4
- name: Add syncoid_destination_username
  ansible.builtin.user:
    name: "{{ syncoid_destination_username }}"
    password: '!'
- name: Authorize syncoid_source_ssh_public_keys for syncoid_destination_username
  ansible.posix.authorized_key:
    user: "{{ syncoid_destination_username }}"
    state: present
    key: "{{ syncoid_source_ssh_public_key }}"
  loop: "{{ syncoid_source_ssh_public_keys }}"
  loop_control:
    loop_var: syncoid_source_ssh_public_key
# - name: Allow syncoid user to shutdown
#   ansible.builtin.lineinfile:
#     path: /etc/sudoers
#     line: "{{ syncoid_destination_username }} ALL=NOPASSWD: /usr/sbin/shutdown"
# - name: Allow syncoid user to run mount.zfs
#   ansible.builtin.lineinfile:
#     path: /etc/sudoers
#     line: "{{ syncoid_destination_username }} ALL=NOPASSWD: /usr/sbin/mount.zfs"
- name: Set zfs permissions for non-root syncoid destinations
  ansible.builtin.command:
    cmd: "zfs allow -u {{ syncoid_destination_username }} compression,create,destroy,hold,mount,mountpoint,receive,refreservation,release,rollback,snapshot {{ syncoid_destination_dataset }}"
  changed_when: false
# - name: Enable ACLs on syncoid_destination_dataset
#   ansible.builtin.command:
#     cmd: "zfs set acltype=off {{ syncoid_destination_dataset }}"
#   changed_when: false
# - name: Get syncoid_destination_dataset mountpoint
#   ansible.builtin.command:
#     cmd: "zfs get -H -o value mountpoint {{ syncoid_destination_dataset }}"
#   register: syncoid_destination_dataset_mountpoint_result
#   changed_when: false
# - name: Set permission to add subdirectories in syncoid_destination_dataset mountpoint
#   ansible.builtin.command:
#     cmd: "chmod g+s {{ syncoid_destination_dataset_mountpoint_result.stdout }}"
    # cmd: "setfacl A+user:{{ syncoid_destination_username }}:add_subdirectory:allow {{ syncoid_destination_dataset_mountpoint_result.stdout }}"
  # changed_when: false
- name: Configure sanoid
  vars:
    sanoid_dataset_configs:
      - key: "{{ syncoid_destination_dataset }}"
        value:
          ### remove outdated snapshots
          autoprune: true
          ### don't have sanoid take snapshots as they are coming from syncoid
          autosnap: false
          recursive: true
          ### define what to keep
          frequently: 0
          hourly: 0
          daily: 30
          monthly: 6
          yearly: 0
  ansible.builtin.include_role:
    name: sanoid
